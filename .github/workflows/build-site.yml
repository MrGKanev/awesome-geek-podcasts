name: Build and Deploy Podcast Website

on:
  push:
    branches: [ main, master ]
    paths:
      - 'README.md'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Create build script
        run: |
          mkdir -p scripts
          cat > scripts/build-site.js << 'EOL'
          const fs = require('fs');
          const path = require('path');
          const { marked } = require('marked');

          // Ensure directories exist
          if (!fs.existsSync(path.join(__dirname, '../public'))) {
            fs.mkdirSync(path.join(__dirname, '../public'), { recursive: true });
          }

          // Read README.md content
          const readmePath = path.join(__dirname, '../README.md');
          const readmeContent = fs.readFileSync(readmePath, 'utf-8');

          // Parse markdown to HTML
          const rawHtml = marked.parse(readmeContent);

          // Create a basic HTML wrapper with TailwindCSS
          const htmlContent = `
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Awesome Geek Podcasts</title>
            <meta name="description" content="A curated list of awesome geek podcasts in various languages">
            <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
            <style>
              .markdown-body {
                max-width: 100%;
                overflow-x: auto;
              }
              .markdown-body h1 {
                font-size: 2.25rem;
                font-weight: bold;
                margin-top: 1.5rem;
                margin-bottom: 1rem;
                color: #1a202c;
              }
              .markdown-body h2 {
                font-size: 1.875rem;
                font-weight: bold;
                margin-top: 1.5rem;
                margin-bottom: 1rem;
                color: #2d3748;
                padding-bottom: 0.5rem;
                border-bottom: 1px solid #e2e8f0;
              }
              .markdown-body h3 {
                font-size: 1.5rem;
                font-weight: bold;
                margin-top: 1.25rem;
                margin-bottom: 0.75rem;
                color: #4a5568;
              }
              .markdown-body ul {
                list-style-type: disc;
                margin-left: 1.5rem;
                margin-bottom: 1rem;
              }
              .markdown-body li {
                margin-bottom: 0.5rem;
              }
              .markdown-body a {
                color: #4299e1;
                text-decoration: none;
              }
              .markdown-body a:hover {
                text-decoration: underline;
              }
              .markdown-body p {
                margin-bottom: 1rem;
              }
              /* Table of contents styling */
              .markdown-body h2#table-of-contents + ul {
                background-color: #f7fafc;
                padding: 1rem;
                border-radius: 0.5rem;
                border: 1px solid #e2e8f0;
              }
              /* Search box */
              .search-container {
                margin-bottom: 1rem;
              }
              .search-input {
                width: 100%;
                padding: 0.75rem;
                border: 1px solid #e2e8f0;
                border-radius: 0.375rem;
                font-size: 1rem;
              }
              .search-input:focus {
                outline: none;
                border-color: #4299e1;
                box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
              }
              /* Language navigation */
              .language-nav {
                position: sticky;
                top: 0;
                z-index: 10;
                background-color: #ffffff;
                padding: 1rem 0;
                border-bottom: 1px solid #e2e8f0;
                margin-bottom: 1rem;
              }
              .language-nav ul {
                display: flex;
                flex-wrap: wrap;
                gap: 0.5rem;
                list-style-type: none;
                margin-left: 0;
              }
              .language-nav li a {
                display: block;
                padding: 0.5rem 1rem;
                background-color: #ebf4ff;
                color: #3182ce;
                border-radius: 9999px;
                font-size: 0.875rem;
                font-weight: 500;
                transition: all 0.2s;
              }
              .language-nav li a:hover {
                background-color: #bee3f8;
                text-decoration: none;
              }
              .hidden-podcast {
                display: none;
              }
              /* Dark mode toggle */
              .dark-mode {
                background-color: #1a202c;
                color: #e2e8f0;
              }
              .dark-mode .markdown-body h1,
              .dark-mode .markdown-body h2,
              .dark-mode .markdown-body h3 {
                color: #e2e8f0;
              }
              .dark-mode .markdown-body a {
                color: #63b3ed;
              }
              .dark-mode main,
              .dark-mode .language-nav {
                background-color: #2d3748;
                border-color: #4a5568;
              }
              .dark-mode .language-nav li a {
                background-color: #2c5282;
                color: #e2e8f0;
              }
              .dark-mode .language-nav li a:hover {
                background-color: #2b6cb0;
              }
            </style>
          </head>
          <body class="bg-gray-50 min-h-screen transition-colors duration-200">
            <div class="container mx-auto px-4 py-8">
              <header class="mb-6 text-center">
                <h1 class="text-4xl font-bold text-gray-800 dark:text-gray-100">Awesome Geek Podcasts</h1>
                <p class="mt-2 text-gray-600 dark:text-gray-300">A curated list of podcasts we like to listen to</p>
                <div class="mt-4 flex justify-center space-x-4">
                  <a href="https://github.com/avelino/awesome-geek-podcasts" class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700 inline-flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd" />
                    </svg>
                    View on GitHub
                  </a>
                  <button id="dark-mode-toggle" class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 inline-flex items-center">
                    <svg id="moon-icon" class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                    </svg>
                    <svg id="sun-icon" class="w-5 h-5 mr-2 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                    </svg>
                    <span id="theme-text">Dark mode</span>
                  </button>
                </div>
              </header>
              
              <div class="search-container">
                <input type="text" id="search-input" class="search-input" placeholder="Search podcasts...">
              </div>
              
              <main class="bg-white rounded-lg shadow-md p-6 markdown-body">
                <div class="language-nav">
                  <h3>Jump to Language:</h3>
                  <ul>
                    <li><a href="#in-english">English</a></li>
                    <li><a href="#in-portuguese">Portuguese</a></li>
                    <li><a href="#in-spanish">Spanish</a></li>
                    <li><a href="#in-russian">Russian</a></li>
                    <li><a href="#in-persian">Persian</a></li>
                    <li><a href="#in-swedish">Swedish</a></li>
                    <li><a href="#in-french">French</a></li>
                    <li><a href="#in-german">German</a></li>
                    <li><a href="#in-chinese">Chinese</a></li>
                    <li><a href="#in-polish">Polish</a></li>
                    <li><a href="#in-finnish">Finnish</a></li>
                    <li><a href="#in-japanese">Japanese</a></li>
                    <li><a href="#in-bahasa-indonesia">Bahasa Indonesia</a></li>
                    <li><a href="#in-dutch">Dutch</a></li>
                  </ul>
                </div>
                ${rawHtml}
              </main>
              
              <footer class="mt-8 text-center text-gray-600 dark:text-gray-300">
                <p>Generated from <a href="https://github.com/avelino/awesome-geek-podcasts" class="text-blue-600 hover:underline dark:text-blue-400">awesome-geek-podcasts</a> repository.</p>
                <p class="mt-2 text-sm">Last updated: ${new Date().toLocaleDateString()}</p>
              </footer>
            </div>
            
            <script>
              // Add ID attributes to language headings for navigation
              document.querySelectorAll('h2').forEach(heading => {
                const text = heading.textContent;
                if (text.startsWith('In ')) {
                  heading.id = text.toLowerCase().replace(/\\s+/g, '-');
                }
              });
              
              // Smooth scrolling for language navigation
              document.querySelectorAll('.language-nav a').forEach(anchor => {
                anchor.addEventListener('click', function(e) {
                  e.preventDefault();
                  const targetId = this.getAttribute('href');
                  const targetElement = document.querySelector(targetId);
                  if (targetElement) {
                    window.scrollTo({
                      top: targetElement.offsetTop - 100,
                      behavior: 'smooth'
                    });
                  }
                });
              });
              
              // Search functionality
              const searchInput = document.getElementById('search-input');
              const allPodcasts = document.querySelectorAll('main li');
              
              searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                
                allPodcasts.forEach(podcast => {
                  const podcastText = podcast.textContent.toLowerCase();
                  if (podcastText.includes(searchTerm) || searchTerm === '') {
                    podcast.classList.remove('hidden-podcast');
                  } else {
                    podcast.classList.add('hidden-podcast');
                  }
                });
              });
              
              // Dark mode toggle
              const darkModeToggle = document.getElementById('dark-mode-toggle');
              const moonIcon = document.getElementById('moon-icon');
              const sunIcon = document.getElementById('sun-icon');
              const themeText = document.getElementById('theme-text');
              const body = document.body;
              
              // Check for saved theme preference or prefer-color-scheme
              const savedTheme = localStorage.getItem('theme');
              const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
              
              if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
                enableDarkMode();
              }
              
              darkModeToggle.addEventListener('click', () => {
                if (body.classList.contains('dark-mode')) {
                  disableDarkMode();
                } else {
                  enableDarkMode();
                }
              });
              
              function enableDarkMode() {
                body.classList.add('dark-mode');
                moonIcon.classList.add('hidden');
                sunIcon.classList.remove('hidden');
                themeText.textContent = 'Light mode';
                localStorage.setItem('theme', 'dark');
              }
              
              function disableDarkMode() {
                body.classList.remove('dark-mode');
                moonIcon.classList.remove('hidden');
                sunIcon.classList.add('hidden');
                themeText.textContent = 'Dark mode';
                localStorage.setItem('theme', 'light');
              }
            </script>
          </body>
          </html>
          `;

          // Write HTML to file
          fs.writeFileSync(path.join(__dirname, '../public/index.html'), htmlContent);

          console.log('Website built successfully!');
          EOL
          
      - name: Install dependencies
        run: npm install marked
        
      - name: Create public directory
        run: mkdir -p public
          
      - name: Build website
        run: node scripts/build-site.js
        
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: public